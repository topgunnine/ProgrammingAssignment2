makeCacheMatrix <- function(x = matrix()) {
             inv <- NULL
             set <- function(y) {
             x <<- y
             inv <<- NULL
           }

get <- function() x
setinverse <- function(inverse) inv <<- inverse
getinverse <- function() inv

list(set = set, get = get, setinverse = setinverse, getinverse = getinverse)

}

cacheSolve <- function(x,...) {
          inv <- x$getinverse()
         if(!is.null(inv) && inv==solve(x)){ #Checking if cache has an inverse value and the same matrix is passed to calculate inverse; otherwise, new Inverse calculated
           message("getting cached data")
           return(inv)
   }
data <- x$get()
inv <- solve(data)
x$setinverse(inv)
inv
}
